
###importando herramientas
from turtle import *
from random import randrange
from random import randint
from freegames import square, vector
import random

###establecer los objetos
food = vector(0, 0)
snake = [vector(10, 0)]
aim = vector(0, -10)


###Establecer Colores
color = ['green','yellow','blue','orange','pink']

###Elegir color de vibora
color_Snake = random.choice(color)

###Quitar color de la lista para no repetir
color.remove(color_Snake)

###Elegir color de comida
color_Food = random.choice(color)

###Codigo para cabio de direcci√≥n
def change(x, y):
    "Change snake direction."
    aim.x = x
    aim.y = y

###Checar que el jugador siga dentro de la pantalla
def headinside(head):
    "Return True if head inside boundaries."
    return -200 < head.x < 190 and -200 < head.y < 190

###Checar que la comida siga dentro de la pantalla
def foodinside(food):
    "Return True if head inside boundaries."
    return -190 < food.x < 180 and -190 < food.y < 180

###Avanzar hacia adelante
def move():
    "Move snake forward one segment."
    head = snake[-1].copy()
    head.move(aim)

    if not headinside(head) or head in snake:
        square(head.x, head.y, 9, 'red')
        update()
        return

    snake.append(head)

    if head == food:
        print('Snake:', len(snake))
        food.x = randrange(-15, 15) * 10
        food.y = randrange(-15, 15) * 10
    else:
        snake.pop(0)
        if foodinside(food) and randint(0, 1) == 0:
            food.x = food.x + randint(-1, 1) * 10
        elif foodinside(food):
            food.y = food.y + randint(-1, 1) * 10

    clear()

    for body in snake:
        square(body.x, body.y, 9, color_Snake)

    square(food.x, food.y, 9, color_Food)
    update()
    ontimer(move, 100)

setup(420, 420, 370, 0)
hideturtle()
tracer(False)
listen()
onkey(lambda: change(10, 0), 'Right')
onkey(lambda: change(-10, 0), 'Left')
onkey(lambda: change(0, 10), 'Up')
onkey(lambda: change(0, -10), 'Down')
move()
done()
